import { TerrainTile, WorkerPool } from '../../build/era.js';
import * as Comlink from 'comlink';
import * as THREE from 'three';

const TEXTURE_QUALITY = 8;

/**
 * A custom terrain tile implementation for custom terrain texture generation.
 */
class CustomTerrainTile extends TerrainTile {
  /** @override */
  async generateTexture(mesh) {
    // Create worker and wrap with Comlink.
    const reservation = await WorkerPool.get().getWorkerReservation();
    const worker = new Worker('./texture_worker.js', {
      type: 'module',
    });
    const TextureGenerator = Comlink.wrap(worker);
    const size = TEXTURE_QUALITY * (this.data.length - 1);
    this.textureGenerator = await new TextureGenerator(
      size,
      this.getCoordinates()
    );
    const imageData = await this.textureGenerator.generate(
      mesh.geometry.faces,
      mesh.geometry.vertices,
      mesh.geometry.boundingBox
    );
    worker.terminate();
    WorkerPool.get().releaseWorker(reservation);

    // Use the image data generated by the texture worker.
    const canvas = document.createElement('canvas');
    canvas.width = size;
    canvas.height = size;
    const context = canvas.getContext('2d');
    context.putImageData(imageData, 0, 0);

    // Set the material texture.
    const texture = new THREE.CanvasTexture(canvas);
    mesh.material.map = texture;
    mesh.material.needsUpdate = true;
  }
}

export default CustomTerrainTile;
