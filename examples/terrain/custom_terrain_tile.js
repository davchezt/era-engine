import textureWorkerPool from './texture_worker_pool.js';
import { TerrainTile } from '../../build/era.js';
import * as Comlink from 'comlink';
import * as THREE from 'three';

const TEXTURE_QUALITY = 8;

/**
 * A custom terrain tile implementation for custom terrain texture generation.
 */
class CustomTerrainTile extends TerrainTile {
  /** @override */
  async generateTexture(mesh) {
    const TextureGenerator = await textureWorkerPool.getWorker();
    const size = TEXTURE_QUALITY * (this.data.length - 1);
    this.textureGenerator = await new TextureGenerator(
      size,
      this.getCoordinates()
    );
    const imageData = await this.textureGenerator.generate(
      Comlink.transfer(mesh.geometry.getAttribute('position').array),
      Comlink.transfer(mesh.geometry.index.array),
      mesh.geometry.boundingBox
    );
    textureWorkerPool.releaseWorker(TextureGenerator);
    // Use the image data generated by the texture worker.
    const canvas = document.createElement('canvas');
    canvas.width = size;
    canvas.height = size;
    const context = canvas.getContext('2d');
    context.putImageData(imageData, 0, 0);

    // Set the material texture.
    const texture = new THREE.CanvasTexture(canvas);
    mesh.material.map = texture;
    mesh.material.needsUpdate = true;
  }
}

export default CustomTerrainTile;
